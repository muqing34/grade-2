package com.example.textgame.dto;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import java.util.List;

/**
 * Data Transfer Objects for interacting with the DeepSeek API.
 */
@Data // Lombok annotation to generate getters, setters, toString, etc.
public class DeepSeekDTO {

    /**
     * Represents a message in the chat conversation.
     * Used for both requests and responses.
     */
    @Data
    @NoArgsConstructor // Lombok: Generate no-args constructor
    @AllArgsConstructor // Lombok: Generate all-args constructor
    public static class Message {
        private String role; // Role of the message sender ("system", "user", or "assistant")
        private String content; // Content of the message
    }

    /**
     * Represents the request payload for the DeepSeek chat completions endpoint.
     */
    @Data
    public static class ChatRequest {
        private String model; // The ID of the model to use (e.g., "deepseek-chat")
        private List<Message> messages; // A list of messages comprising the conversation history
        // Optional parameters can be added here if needed, e.g.:
        // private Double temperature;
        // private Integer max_tokens;
        // private Boolean stream;
    }

    /**
     * Represents the response payload from the DeepSeek chat completions endpoint.
     * This is a simplified structure focusing on the main parts.
     */
    @Data
    public static class ChatResponse {
        private String id; // A unique identifier for the chat completion
        private String object; // The object type, typically "chat.completion"
        private Long created; // The Unix timestamp (in seconds) of when the chat completion was created
        private String model; // The model used for the chat completion
        private List<Choice> choices; // A list of chat completion choices. Usually only one.
        private Usage usage; // Usage statistics for the completion request

        /**
         * Represents a single choice provided by the model in the response.
         */
        @Data
        public static class Choice {
            private Integer index; // The index of the choice in the list of choices
            private Message message; // The message generated by the model
            private String finish_reason; // The reason the model stopped generating tokens (e.g., "stop")
        }

        /**
         * Represents usage statistics for the API request.
         */
        @Data
        public static class Usage {
            private Integer prompt_tokens; // Number of tokens in the prompt
            private Integer completion_tokens; // Number of tokens in the generated completion
            private Integer total_tokens; // Total number of tokens used in the request (prompt + completion)
        }
    }
}

